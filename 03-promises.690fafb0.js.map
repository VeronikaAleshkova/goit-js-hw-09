{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,UAAWF,SAASC,cAAc,0BAiCpC,SAASE,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAE7BC,YAAW,WACLN,EACFI,EAAQ,CAACN,WAAUC,UAErBM,EAAO,CAACP,WAAUC,YAChBA,MAxCNP,EAAKC,KAAKc,iBAAiB,UAE3B,SAAkBC,GAChBA,EAAIC,iBACJjB,EAAKI,UAAUc,UAAW,EAE1B,IAA8BC,EAAAH,EAAII,cAAcC,SAAzCC,EAAuBH,EAAvBZ,MAAOgB,EAAgBJ,EAAhBI,KAAMC,EAAUL,EAAVK,OAChBC,EAAYC,OAAOJ,EAAMK,OACzBC,EAAWF,OAAOH,EAAKI,OACvBE,EAAaH,OAAOF,EAAOG,OAE3BG,EAAaL,EAAYG,EAAWC,EAExC,GAAGJ,EAAY,GAAKG,EAAW,GAAKC,EAAY,EAE9C,YADA/B,EAAAiC,OAAOC,QAAQ,wCAIjB,IAAK,IAAIC,EAAW,EAAGA,GAAYJ,EAAYI,GAAU,EAEvD5B,EAAc4B,EAAUR,GACvBS,MAAK,SAAAC,G,IAAE7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,M,OAAWT,EAAAiC,OAAOK,QAAQ,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,UACvF+B,OAAI,SAAAH,G,IAAE7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,M,OAAWT,EAAAiC,OAAOQ,QAAQ,sBAAqCF,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,UACxFkB,GAAaG,EAGf5B,EAAKC,KAAKuC,QAkBMC,EAjBPX,EAkBThB,YAAW,WACTd,EAAKI,UAAUc,UAAW,IACzBuB,GAHL,IAAkBA,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  btnSubmit: document.querySelector('button[type=\"submit\"]')\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  refs.btnSubmit.disabled = true;\n\n  const {delay, step, amount} = evt.currentTarget.elements;\n  let userDelay = Number(delay.value);\n  let userStep = Number(step.value);\n  let userAmount = Number(amount.value);\n\n  let totalDelay = userDelay + userStep * userAmount;\n\n  if(userDelay < 0 || userStep < 0 || userAmount <0) {\n    Notify.warning('Entered values must not be negative!');\n    return;\n  }\n\n  for (let position = 1; position <= userAmount; position+=1) {\n   \n    createPromise(position, userDelay)\n    .then(({position, delay}) => Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`))\n    .catch(({position, delay}) => Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`));\n    userDelay += userStep;\n    // userDelay += userStep*position;\n  }\n  refs.form.reset();\n  onOffBtn(totalDelay);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n \n  setTimeout(() => {\n    if (shouldResolve) {\n      resolve({position, delay})\n  } else {\n    reject({position, delay})\n  }}, delay) \n})\n};\n\nfunction onOffBtn(total) {\n  setTimeout(() => {\n    refs.btnSubmit.disabled = false\n  }, total)\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","btnSubmit","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","disabled","_elements","currentTarget","elements","delay1","step","amount","userDelay","Number","value","userStep","userAmount","totalDelay","Notify","warning","position1","then","param","success","concat","catch","failure","reset","total"],"version":3,"file":"03-promises.690fafb0.js.map"}